import { asStringLiteralSubsetArray } from './as-string-literal-subset-array'
import type { ValueType } from '@types'

// Individual value type constants (matching DHIS2 API values)
export const VALUE_TYPE_AGE = 'AGE'
export const VALUE_TYPE_BOOLEAN = 'BOOLEAN'
export const VALUE_TYPE_DATE = 'DATE'
export const VALUE_TYPE_DATETIME = 'DATETIME'
export const VALUE_TYPE_EMAIL = 'EMAIL'
export const VALUE_TYPE_INTEGER = 'INTEGER'
export const VALUE_TYPE_INTEGER_NEGATIVE = 'INTEGER_NEGATIVE'
export const VALUE_TYPE_INTEGER_POSITIVE = 'INTEGER_POSITIVE'
export const VALUE_TYPE_INTEGER_ZERO_OR_POSITIVE = 'INTEGER_ZERO_OR_POSITIVE'
export const VALUE_TYPE_LETTER = 'LETTER'
export const VALUE_TYPE_LONG_TEXT = 'LONG_TEXT'
export const VALUE_TYPE_NUMBER = 'NUMBER'
export const VALUE_TYPE_ORGANISATION_UNIT = 'ORGANISATION_UNIT'
export const VALUE_TYPE_PERCENTAGE = 'PERCENTAGE'
export const VALUE_TYPE_PHONE_NUMBER = 'PHONE_NUMBER'
export const VALUE_TYPE_TEXT = 'TEXT'
export const VALUE_TYPE_TIME = 'TIME'
export const VALUE_TYPE_TRUE_ONLY = 'TRUE_ONLY'
export const VALUE_TYPE_UNIT_INTERVAL = 'UNIT_INTERVAL'
export const VALUE_TYPE_URL = 'URL'
export const VALUE_TYPE_USERNAME = 'USERNAME'

export const SUPPORTED_VALUE_TYPES = asStringLiteralSubsetArray<ValueType>()([
    VALUE_TYPE_AGE,
    VALUE_TYPE_BOOLEAN,
    VALUE_TYPE_DATE,
    VALUE_TYPE_DATETIME,
    VALUE_TYPE_EMAIL,
    VALUE_TYPE_INTEGER,
    VALUE_TYPE_INTEGER_NEGATIVE,
    VALUE_TYPE_INTEGER_POSITIVE,
    VALUE_TYPE_INTEGER_ZERO_OR_POSITIVE,
    VALUE_TYPE_LETTER,
    VALUE_TYPE_LONG_TEXT,
    VALUE_TYPE_NUMBER,
    VALUE_TYPE_ORGANISATION_UNIT,
    VALUE_TYPE_PERCENTAGE,
    VALUE_TYPE_PHONE_NUMBER,
    VALUE_TYPE_TEXT,
    VALUE_TYPE_TIME,
    VALUE_TYPE_TRUE_ONLY,
    VALUE_TYPE_UNIT_INTERVAL,
    VALUE_TYPE_URL,
    VALUE_TYPE_USERNAME,
] as const)

export type SupportedValueType = (typeof SUPPORTED_VALUE_TYPES)[number]
